{"ast":null,"code":"import { tap, first, delay } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CoursesService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.API = '../../../assets/courses.json';\n  }\n  list() {\n    return this.httpClient.get(this.API).pipe(first(), delay(15000), tap(courses => console.log(courses)));\n  }\n}\nCoursesService.ɵfac = function CoursesService_Factory(t) {\n  return new (t || CoursesService)(i0.ɵɵinject(i1.HttpClient));\n};\nCoursesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CoursesService,\n  factory: CoursesService.ɵfac,\n  providedIn: 'root'\n});\nexport { CoursesService };","map":{"version":3,"names":["tap","first","delay","CoursesService","constructor","httpClient","API","list","get","pipe","courses","console","log","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\João\\Documents\\meus_repositorios_github\\angular-and-spring\\crud-angular\\src\\app\\courses\\services\\courses.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { tap, first, delay } from 'rxjs';\n\nimport { Course } from '../model/course';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CoursesService {\n\n  private readonly API = '../../../assets/courses.json';\n\n  constructor(private httpClient: HttpClient) { }\n\n  list() {\n    return this.httpClient.get<Course[]>(this.API)\n    .pipe(\n      first(),\n      delay(15000),\n      tap(courses => console.log(courses))\n    )\n  }\n}\n"],"mappings":"AAEA,SAASA,GAAG,EAAEC,KAAK,EAAEC,KAAK,QAAQ,MAAM;;;AAIxC,MAGaC,cAAc;EAIzBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAFb,KAAAC,GAAG,GAAG,8BAA8B;EAEP;EAE9CC,IAAIA,CAAA;IACF,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAW,IAAI,CAACF,GAAG,CAAC,CAC7CG,IAAI,CACHR,KAAK,EAAE,EACPC,KAAK,CAAC,KAAK,CAAC,EACZF,GAAG,CAACU,OAAO,IAAIC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC,CAAC,CACrC;EACH;;AAbWP,cAAc,C;mBAAdA,cAAc,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdb,cAAc,C;SAAdA,cAAc;EAAAc,OAAA,EAAdd,cAAc,CAAAe,IAAA;EAAAC,UAAA,EAFb;AAAM;SAEPhB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}